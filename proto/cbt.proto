syntax = "proto3";

package cbt;

option go_package = "github.com/PrasadG193/cbt-datapath/pkg/grpc";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service VolumeSnapshotDeltaService {
  rpc ListVolumeSnapshotDeltas(VolumeSnapshotDeltaRequest)
    returns (VolumeSnapshotDeltaResponse) {}
}

message VolumeSnapshotDeltaRequest {
  // The name of the base snapshot handle to use for comparison.
  // If not specified, return all changed blocks.
  // This field is OPTIONAL.
  optional string snapshot_base = 1;

  // The name of the target snapshot handle to use for comparison.
  // If not specified, an error is returned.
  // This field is REQUIRED.
  string snapshot_target = 2;

  // Defines the type of volume. Default to "block".
  // This field is REQUIRED.
  string mode = 3;

  // A token to specify where to start paginating. Set this field to
  // `next_token` returned by a previous `ListVolumeSnapshotDeltas` call to get
  // the next page of entries. An empty string is equal to an unspecified field
  // value.
  // This field is OPTIONAL.
  optional string starting_token = 4;

  // If specified (non-zero value), the Plugin MUST NOT return more entries than
  // this number in the response. If the actual number of entries is more than
  // this number, the Plugin MUST set `next_token` in the response which can be
  // used to get the next page of entries in the subsequent
  // `ListVolumeSnapshotDeltas` call. If not specified (zero value), it will be
  // default to 256 entries. The value of this field MUST NOT be negative.
  // This field is REQUIRED.
  int32 max_entries = 5;

  // Token to authenticate client at server side.
  // Token is generated using VolumeSnapshotDeltaToken API
  string token = 6;
}

message VolumeSnapshotDeltaResponse {
  // Snapshot deltas for block volume snapshots. An empty list means there are
  // no block deltas between the base and target snapshots. If unspecified, it
  // means the volume isn't of block type.
  // This field is OPTIONAL.
  optional BlockVolumeSnapshotDelta block_delta = 1;

  // The volume size in bytes.
  // This field is OPTIONAL.
  optional uint64 volume_size_bytes = 2;

  // This token is used to get the next page of entries for
  // `ListVolumeSnapshotDeltas` request. If the number of entries is larger than
  // `max_entries`, use the `next_token` as a value for the
  // `starting_token` field in the next `ListVolumeSnapshotDeltas` request.
  // An empty string is equal to an unspecified field value.
  // This field is OPTIONAL.
  optional string next_token = 3;
}

message BlockVolumeSnapshotDelta {
  // The list of changed blocks deltas. If empty, it means there are no
  // differences between the base and target snapshots.
  // This field is OPTIONAL.
  repeated ChangedBlockDelta changed_block_deltas = 1;
}

message ChangedBlockDelta {
  // The block logical offset on the volume.
  // This field is REQUIRED.
  uint64 offset = 1;

  // The size of the block in bytes.
  // This field is REQUIRED.
  uint64 block_size_bytes = 2;

  // The token and other information needed to retrieve the actual data block
  // at the given offset. If the provider doesn't support token-based data
  // blocks retrieval, this should be left unspecified.
  // This field is OPTIONAL.
  optional DataToken data_token = 3;
}

message DataToken {
  // The token to use to retrieve the actual data block at the given offset.
  // This field is REQUIRED.
  string token = 1;

  // Timestamp when the token is issued.
  // This field is REQUIRED.
  google.protobuf.Timestamp issuance_time = 2;

  // The TTL of the token in seconds. The expiry time is calculated by adding
  // the time of issuance with this value.
  // This field is REQUIRED.
  google.protobuf.Duration ttl_seconds = 3;
}
