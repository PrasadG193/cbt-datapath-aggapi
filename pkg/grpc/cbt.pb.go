// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: cbt.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VolumeSnapshotDeltaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the base snapshot handle to use for comparison.
	// If not specified, return all changed blocks.
	// This field is OPTIONAL.
	SnapshotBase *string `protobuf:"bytes,1,opt,name=snapshot_base,json=snapshotBase,proto3,oneof" json:"snapshot_base,omitempty"`
	// The name of the target snapshot handle to use for comparison.
	// If not specified, an error is returned.
	// This field is REQUIRED.
	SnapshotTarget string `protobuf:"bytes,2,opt,name=snapshot_target,json=snapshotTarget,proto3" json:"snapshot_target,omitempty"`
	// Defines the type of volume. Default to "block".
	// This field is REQUIRED.
	Mode string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	// A token to specify where to start paginating. Set this field to
	// `next_token` returned by a previous `ListVolumeSnapshotDeltas` call to get
	// the next page of entries. An empty string is equal to an unspecified field
	// value.
	// This field is OPTIONAL.
	StartingToken *string `protobuf:"bytes,4,opt,name=starting_token,json=startingToken,proto3,oneof" json:"starting_token,omitempty"`
	// If specified (non-zero value), the Plugin MUST NOT return more entries than
	// this number in the response. If the actual number of entries is more than
	// this number, the Plugin MUST set `next_token` in the response which can be
	// used to get the next page of entries in the subsequent
	// `ListVolumeSnapshotDeltas` call. If not specified (zero value), it will be
	// default to 256 entries. The value of this field MUST NOT be negative.
	// This field is REQUIRED.
	MaxEntries int32 `protobuf:"varint,5,opt,name=max_entries,json=maxEntries,proto3" json:"max_entries,omitempty"`
	// Token to authenticate client at server side.
	// Token is generated using VolumeSnapshotDeltaToken API
	Token string `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VolumeSnapshotDeltaRequest) Reset() {
	*x = VolumeSnapshotDeltaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cbt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeSnapshotDeltaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeSnapshotDeltaRequest) ProtoMessage() {}

func (x *VolumeSnapshotDeltaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cbt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeSnapshotDeltaRequest.ProtoReflect.Descriptor instead.
func (*VolumeSnapshotDeltaRequest) Descriptor() ([]byte, []int) {
	return file_cbt_proto_rawDescGZIP(), []int{0}
}

func (x *VolumeSnapshotDeltaRequest) GetSnapshotBase() string {
	if x != nil && x.SnapshotBase != nil {
		return *x.SnapshotBase
	}
	return ""
}

func (x *VolumeSnapshotDeltaRequest) GetSnapshotTarget() string {
	if x != nil {
		return x.SnapshotTarget
	}
	return ""
}

func (x *VolumeSnapshotDeltaRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VolumeSnapshotDeltaRequest) GetStartingToken() string {
	if x != nil && x.StartingToken != nil {
		return *x.StartingToken
	}
	return ""
}

func (x *VolumeSnapshotDeltaRequest) GetMaxEntries() int32 {
	if x != nil {
		return x.MaxEntries
	}
	return 0
}

func (x *VolumeSnapshotDeltaRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VolumeSnapshotDeltaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Snapshot deltas for block volume snapshots. An empty list means there are
	// no block deltas between the base and target snapshots. If unspecified, it
	// means the volume isn't of block type.
	// This field is OPTIONAL.
	BlockDelta *BlockVolumeSnapshotDelta `protobuf:"bytes,1,opt,name=block_delta,json=blockDelta,proto3,oneof" json:"block_delta,omitempty"`
	// The volume size in bytes.
	// This field is OPTIONAL.
	VolumeSizeBytes *uint64 `protobuf:"varint,2,opt,name=volume_size_bytes,json=volumeSizeBytes,proto3,oneof" json:"volume_size_bytes,omitempty"`
	// This token is used to get the next page of entries for
	// `ListVolumeSnapshotDeltas` request. If the number of entries is larger than
	// `max_entries`, use the `next_token` as a value for the
	// `starting_token` field in the next `ListVolumeSnapshotDeltas` request.
	// An empty string is equal to an unspecified field value.
	// This field is OPTIONAL.
	NextToken *string `protobuf:"bytes,3,opt,name=next_token,json=nextToken,proto3,oneof" json:"next_token,omitempty"`
}

func (x *VolumeSnapshotDeltaResponse) Reset() {
	*x = VolumeSnapshotDeltaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cbt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeSnapshotDeltaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeSnapshotDeltaResponse) ProtoMessage() {}

func (x *VolumeSnapshotDeltaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cbt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeSnapshotDeltaResponse.ProtoReflect.Descriptor instead.
func (*VolumeSnapshotDeltaResponse) Descriptor() ([]byte, []int) {
	return file_cbt_proto_rawDescGZIP(), []int{1}
}

func (x *VolumeSnapshotDeltaResponse) GetBlockDelta() *BlockVolumeSnapshotDelta {
	if x != nil {
		return x.BlockDelta
	}
	return nil
}

func (x *VolumeSnapshotDeltaResponse) GetVolumeSizeBytes() uint64 {
	if x != nil && x.VolumeSizeBytes != nil {
		return *x.VolumeSizeBytes
	}
	return 0
}

func (x *VolumeSnapshotDeltaResponse) GetNextToken() string {
	if x != nil && x.NextToken != nil {
		return *x.NextToken
	}
	return ""
}

type BlockVolumeSnapshotDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of changed blocks deltas. If empty, it means there are no
	// differences between the base and target snapshots.
	// This field is OPTIONAL.
	ChangedBlockDeltas []*ChangedBlockDelta `protobuf:"bytes,1,rep,name=changed_block_deltas,json=changedBlockDeltas,proto3" json:"changed_block_deltas,omitempty"`
}

func (x *BlockVolumeSnapshotDelta) Reset() {
	*x = BlockVolumeSnapshotDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cbt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockVolumeSnapshotDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockVolumeSnapshotDelta) ProtoMessage() {}

func (x *BlockVolumeSnapshotDelta) ProtoReflect() protoreflect.Message {
	mi := &file_cbt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockVolumeSnapshotDelta.ProtoReflect.Descriptor instead.
func (*BlockVolumeSnapshotDelta) Descriptor() ([]byte, []int) {
	return file_cbt_proto_rawDescGZIP(), []int{2}
}

func (x *BlockVolumeSnapshotDelta) GetChangedBlockDeltas() []*ChangedBlockDelta {
	if x != nil {
		return x.ChangedBlockDeltas
	}
	return nil
}

type ChangedBlockDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The block logical offset on the volume.
	// This field is REQUIRED.
	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// The size of the block in bytes.
	// This field is REQUIRED.
	BlockSizeBytes uint64 `protobuf:"varint,2,opt,name=block_size_bytes,json=blockSizeBytes,proto3" json:"block_size_bytes,omitempty"`
	// The token and other information needed to retrieve the actual data block
	// at the given offset. If the provider doesn't support token-based data
	// blocks retrieval, this should be left unspecified.
	// This field is OPTIONAL.
	DataToken *DataToken `protobuf:"bytes,3,opt,name=data_token,json=dataToken,proto3,oneof" json:"data_token,omitempty"`
}

func (x *ChangedBlockDelta) Reset() {
	*x = ChangedBlockDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cbt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangedBlockDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangedBlockDelta) ProtoMessage() {}

func (x *ChangedBlockDelta) ProtoReflect() protoreflect.Message {
	mi := &file_cbt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangedBlockDelta.ProtoReflect.Descriptor instead.
func (*ChangedBlockDelta) Descriptor() ([]byte, []int) {
	return file_cbt_proto_rawDescGZIP(), []int{3}
}

func (x *ChangedBlockDelta) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ChangedBlockDelta) GetBlockSizeBytes() uint64 {
	if x != nil {
		return x.BlockSizeBytes
	}
	return 0
}

func (x *ChangedBlockDelta) GetDataToken() *DataToken {
	if x != nil {
		return x.DataToken
	}
	return nil
}

type DataToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The token to use to retrieve the actual data block at the given offset.
	// This field is REQUIRED.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Timestamp when the token is issued.
	// This field is REQUIRED.
	IssuanceTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=issuance_time,json=issuanceTime,proto3" json:"issuance_time,omitempty"`
	// The TTL of the token in seconds. The expiry time is calculated by adding
	// the time of issuance with this value.
	// This field is REQUIRED.
	TtlSeconds *durationpb.Duration `protobuf:"bytes,3,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
}

func (x *DataToken) Reset() {
	*x = DataToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cbt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataToken) ProtoMessage() {}

func (x *DataToken) ProtoReflect() protoreflect.Message {
	mi := &file_cbt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataToken.ProtoReflect.Descriptor instead.
func (*DataToken) Descriptor() ([]byte, []int) {
	return file_cbt_proto_rawDescGZIP(), []int{4}
}

func (x *DataToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DataToken) GetIssuanceTime() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuanceTime
	}
	return nil
}

func (x *DataToken) GetTtlSeconds() *durationpb.Duration {
	if x != nil {
		return x.TtlSeconds
	}
	return nil
}

var File_cbt_proto protoreflect.FileDescriptor

var file_cbt_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x62, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x62, 0x74,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8b, 0x02, 0x0a, 0x1a, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x42, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xec, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x01, 0x52, 0x0f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x64,
	0x0a, 0x18, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x14, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x9e, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x74, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x74, 0x74, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x32, 0x7d, 0x0a, 0x1a, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x62, 0x74,
	0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x62,
	0x74, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72,
	0x61, 0x73, 0x61, 0x64, 0x47, 0x31, 0x39, 0x33, 0x2f, 0x63, 0x62, 0x74, 0x2d, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x61, 0x74, 0x68, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cbt_proto_rawDescOnce sync.Once
	file_cbt_proto_rawDescData = file_cbt_proto_rawDesc
)

func file_cbt_proto_rawDescGZIP() []byte {
	file_cbt_proto_rawDescOnce.Do(func() {
		file_cbt_proto_rawDescData = protoimpl.X.CompressGZIP(file_cbt_proto_rawDescData)
	})
	return file_cbt_proto_rawDescData
}

var file_cbt_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cbt_proto_goTypes = []interface{}{
	(*VolumeSnapshotDeltaRequest)(nil),  // 0: cbt.VolumeSnapshotDeltaRequest
	(*VolumeSnapshotDeltaResponse)(nil), // 1: cbt.VolumeSnapshotDeltaResponse
	(*BlockVolumeSnapshotDelta)(nil),    // 2: cbt.BlockVolumeSnapshotDelta
	(*ChangedBlockDelta)(nil),           // 3: cbt.ChangedBlockDelta
	(*DataToken)(nil),                   // 4: cbt.DataToken
	(*timestamppb.Timestamp)(nil),       // 5: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),         // 6: google.protobuf.Duration
}
var file_cbt_proto_depIdxs = []int32{
	2, // 0: cbt.VolumeSnapshotDeltaResponse.block_delta:type_name -> cbt.BlockVolumeSnapshotDelta
	3, // 1: cbt.BlockVolumeSnapshotDelta.changed_block_deltas:type_name -> cbt.ChangedBlockDelta
	4, // 2: cbt.ChangedBlockDelta.data_token:type_name -> cbt.DataToken
	5, // 3: cbt.DataToken.issuance_time:type_name -> google.protobuf.Timestamp
	6, // 4: cbt.DataToken.ttl_seconds:type_name -> google.protobuf.Duration
	0, // 5: cbt.VolumeSnapshotDeltaService.ListVolumeSnapshotDeltas:input_type -> cbt.VolumeSnapshotDeltaRequest
	1, // 6: cbt.VolumeSnapshotDeltaService.ListVolumeSnapshotDeltas:output_type -> cbt.VolumeSnapshotDeltaResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_cbt_proto_init() }
func file_cbt_proto_init() {
	if File_cbt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cbt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeSnapshotDeltaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cbt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeSnapshotDeltaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cbt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockVolumeSnapshotDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cbt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangedBlockDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cbt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cbt_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_cbt_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_cbt_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cbt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cbt_proto_goTypes,
		DependencyIndexes: file_cbt_proto_depIdxs,
		MessageInfos:      file_cbt_proto_msgTypes,
	}.Build()
	File_cbt_proto = out.File
	file_cbt_proto_rawDesc = nil
	file_cbt_proto_goTypes = nil
	file_cbt_proto_depIdxs = nil
}
